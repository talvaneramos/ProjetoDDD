// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projeto.Infra.Data.Contexts;

#nullable disable

namespace Projeto.Infra.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240326102422_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Projeto.Domain.Entities.Dependente", b =>
                {
                    b.Property<int>("IdDependente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdDependente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDependente"));

                    b.Property<DateTime?>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("Date")
                        .HasColumnName("DataNascimento");

                    b.Property<int>("IdFuncionario")
                        .HasColumnType("int")
                        .HasColumnName("IdFuncionario");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Nome");

                    b.HasKey("IdDependente");

                    b.HasIndex("IdFuncionario");

                    b.ToTable("Dependente", (string)null);
                });

            modelBuilder.Entity("Projeto.Domain.Entities.Funcionario", b =>
                {
                    b.Property<int>("IdFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdFuncionario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFuncionario"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("Cpf");

                    b.Property<DateTime?>("DataAdmissao")
                        .IsRequired()
                        .HasColumnType("date")
                        .HasColumnName("DataAdmissao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Nome");

                    b.Property<decimal?>("Salario")
                        .IsRequired()
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("Salario");

                    b.HasKey("IdFuncionario");

                    b.ToTable("Funcionario", (string)null);
                });

            modelBuilder.Entity("Projeto.Domain.Entities.Dependente", b =>
                {
                    b.HasOne("Projeto.Domain.Entities.Funcionario", "Funcionario")
                        .WithMany("Dependentes")
                        .HasForeignKey("IdFuncionario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("Projeto.Domain.Entities.Funcionario", b =>
                {
                    b.Navigation("Dependentes");
                });
#pragma warning restore 612, 618
        }
    }
}
